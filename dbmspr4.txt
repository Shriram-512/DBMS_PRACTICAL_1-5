4. The following tables form part of a database held in a relational DBMS:
Hotel (HotelNo, Name, City) HotelNo is primary key
Room (RoomNo, HotelNo, Type, Price)
Booking (HotelNo, GuestNo, DateFrom, DateTo, RoomNo)
Guest (GuestNo, GuestName, GuestAddress) GuestNo is primary key

SQL QUERIES: 

CREATE DATABASE HotelBooking;

USE HotelBooking;.

CREATE TABLE Hotel( hotel_no INT, hotel_name VARCHAR(20), city VARCHAR(20), PRIMARY KEY (hotel_no));

CREATE TABLE Room(room_no INT, hotel_no INT, type VARCHAR(20), price DECIMAL, PRIMARY KEY(room_no), FOREIGN KEY(hotel_no) REFERENCES Hotel(hotel_no));

CREATE TABLE Guest(guest_no INT, guest_name VARCHAR(20), g_address VARCHAR(20), PRIMARY KEY(guest_no));

CREATE TABLE Booking(hotel_no INT, guest_no INT, dateFrom DATE, dateTo DATE, room_no INT, FOREIGN KEY(guest_no) REFERENCES Guest(guest_no), FOREIGN KEY(room_no) REFERENCES Room(room_no));

INSERT INTO Hotel( hotel_no, hotel_name, city) VALUES( 1, 'Grosvenor', 'London'),(2, 'RajPlaza', 'Pune'), (3, 'Alpine', 'Mumbai')( 4, 'Athens', 'London');

INSERT INTO Room( room_no, hotel_no, type, price) VALUES
(101, 1, 'single', 30),
(102, 1, 'double', 40),
(103, 1, 'family', 50),
(201, 2, 'single', 35),
(301, 3, 'double', 45),
(401, 4, 'double', 55),
(402, 4, 'family', 50);

INSERT INTO Guest( guest_no, guest_name, g_address) VALUES
(11, 'Shriam', 'Kakslauttanen'),
(12, 'Druva', 'Jaipur'),
(13, 'Pravin', 'Latur'),
(14, 'Mahesh', 'Pune'),
(15, 'Atharva', 'Mumbai'),
(16, 'Krishna', 'London'),
(17, 'Sanket', 'Kolhapur'),
(18, 'Dhaval', 'Surat');

INSERT INTO Booking(hotel_no, guest_no, dateFrom, dateTo, room_no) VALUES
(1, 11, '2022-08-25', '2022-11-25', 102),
(1, 12, '2022-04-24', '2022-12-02', 103),
(2, 16, '2022-05-23', '2022-08-13', 201),
(4, 17, '2022-09-22', '2022-10-11', 401),
(4, 13, '2022-09-21', '2022-12-18', 402);

Solve following queries by SQL

1. What is the total revenue per night from all double rooms?

SELECT SUM(price) AS TotalRevenue FROM Room WHERE type = 'double';

2. List the details of all rooms at the Grosvenor Hotel, including the name of
the guest staying in the room, if the room is occupied.

SELECT newt.guest_name,r.* FROM Room r  JOIN(SELECT g.guest_name, h.hotel_no, b.room_no FROM Hotel h, Booking b, Guest g WHERE h.hotel_no = b.hotel_no AND b.guest_no = g.guest_no AND hotel_name = 'Grosvenor' AND dateFrom<=CURRENT_DATE AND dateTo>=CURRENT_DATE) AS newt ON r.hotel_no = newt.hotel_no AND r.room_no = newt.room_no;

3. What is the average number of bookings for each hotel in April?

SELECT hotel_no FROM Booking WHERE dateFrom>=DATE'2022-04-01' AND dateTo<=DATE'2022-04-30' GROUP BY (hotel_no);

4. Create index on one of the field and show is performance in query.

CREATE INDEX guest_name_idx ON Guest(guest_name);

5. List full details of all hotels.

SELECT * FROM Hotel;

6. List full details of all hotels in London.

SELECT * FROM Hotel WHERE city = 'London';

7. Update the price of all rooms by 5%.

UPDATE Room SET price = price + price*.05;

8. List the number of rooms in each hotel in London

SELECT r.hotel_no, COUNT(*) AS count FROM Hotel h, Room r  WHERE h.hotel_no = r.hotel_no AND city = 'London' GROUP BY(r.hotel_no);

9. List all double or family rooms with a price below Â£40.00 per night, in
ascending order of price

SELECT type, price FROM Room WHERE price<40 AND (type='double' OR type='family') ORDER BY price ASC;
